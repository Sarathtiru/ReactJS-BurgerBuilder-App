{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.css","components/Order/CheckoutSummary/CheckoutSummary.css","containers/Checkout/ContactData/ContactData.css","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_css__WEBPACK_IMPORTED_MODULE_1__","_Input_css__WEBPACK_IMPORTED_MODULE_1___default","input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","a","createElement","Object","assign","className","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","Input","Label","label","module","exports","CheckoutSummary","ContactData","checkoutSummary","react_default","style","width","margin","Burger","ingredients","Button","btnType","clicked","CheckoutCancelled","CheckoutContinued","state","orderForm","name","type","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","orderHandler","event","preventDefault","formData","formElementIdentifier","_this","order","ings","price","orderData","userId","onOrderBurger","token","inputChangedHandler","inputIdentifier","updatedOrderForm","objectSpread","updatedFormElement","target","checkValidity","formIsValid","setState","rules","isValid","trim","length","_this2","this","formElementsArray","id","config","form","onSubmit","formElement","disabled","loading","Spinner","Component","connect","burgerBuilder","totalPrice","auth","dispatch","actions","withErrorHandler","axios","Checkout","checkoutCancelledHandler","history","goBack","CheckoutContinuedHandler","replace","summary","react_router","to","purchasedRedirect","purchased","CheckoutSummary_CheckoutSummary","path","match","component"],"mappings":"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","file":"static/js/3.621bafd1.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Input.css'; \r\n\r\nconst input = (props) => {\r\n\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch(props.elementType){\r\n        case('input'):\r\n           inputElement = <input \r\n                className ={inputClasses.join(' ')}  \r\n                {...props.elementConfig} value={props.value}\r\n                onChange={props.changed}      \r\n               />;\r\n           break;\r\n        case('textarea'):\r\n           inputElement = <textarea \r\n                className ={inputClasses.join(' ')}  \r\n                {...props.elementConfig} value={props.value}\r\n                onChange={props.changed}\r\n               />;\r\n           break;\r\n        case('select'):\r\n           inputElement = (\r\n           <select className ={inputClasses.join(' ')}   \r\n                   value={props.value}\r\n                   onChange={props.changed}\r\n                  >\r\n                   {props.elementConfig.options.map(option =>(\r\n                       <option key ={option.value}value={option.value}>\r\n                           {option.displayValue }\r\n                       </option>\r\n                   ))}\r\n           </select>\r\n           );\r\n        break;\r\n        default: \r\n           inputElement = <input className ={inputClasses.join(' ')}  \r\n           {...props.elementConfig} value={props.value}/>;\r\n    }\r\n    return(\r\n\r\n        <div className = {classes.Input}>\r\n        <label className={classes.Label}>{props.label}</label>\r\n        {inputElement}\r\n        \r\n        \r\n    </div>\r\n\r\n    )\r\n    \r\n};\r\n\r\nexport default input;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input__1VROp\",\"Label\":\"Input__Label__1tOSX\",\"InputElement\":\"Input__InputElement__3TB0k\",\"Invalid\":\"Input__Invalid__38X2d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary__CheckoutSummary__-avOx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData__ContactData__1whvJ\"};","import React from 'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.css';\r\n\r\nconst checkoutSummary = (props)=>{\r\n\r\n    \r\n    return(\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it taste well!</h1>\r\n            <div style ={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button \r\n                btnType =\"Danger\"\r\n                clicked={props.CheckoutCancelled}>CANCEL</Button>\r\n            <Button \r\n                btnType =\"Success\"\r\n                clicked={props.CheckoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default checkoutSummary;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"../../../components/UI/Button/Button\";\r\nimport Spinner from \"../../../components/UI/Spinner/Spinner\";\r\nimport classes from \"./ContactData.css\";\r\nimport axios from \"../../../axios-orders\";\r\nimport Input from \"../../../components/UI/Input/Input\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport * as actions from \"../../../store/actions/index\";\r\n\r\nclass ContactData extends Component {\r\n  state = {\r\n    orderForm: {\r\n      name: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Your Name\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n\r\n      street: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Street\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      zipCode: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"ZIP Code\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          minLength: 5,\r\n          maxLength: 5\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      country: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"text\",\r\n          placeholder: \"Country\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          type: \"email\",\r\n          placeholder: \"Your E-Mail\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true\r\n        },\r\n        valid: false,\r\n        touched: false\r\n      },\r\n      deliveryMethod: {\r\n        elementType: \"select\",\r\n        elementConfig: {\r\n          options: [\r\n            { value: \"\", displayValue: \"\" },\r\n            { value: \"fastest\", displayValue: \"Fastest\" },\r\n            { value: \"cheapest\", displayValue: \"Cheapest\" }\r\n          ]\r\n        },\r\n        value: \"fastest\",\r\n        valid: true,\r\n        validation: {}\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  orderHandler = event => {\r\n    event.preventDefault();\r\n\r\n    const formData = {};\r\n    for (let formElementIdentifier in this.state.orderForm) {\r\n      formData[formElementIdentifier] = this.state.orderForm[\r\n        formElementIdentifier\r\n      ].value;\r\n    }\r\n\r\n    const order = {\r\n      ingredients: this.props.ings,\r\n      price: this.props.price,\r\n      orderData: formData,\r\n      userId: this.props.userId\r\n    };\r\n\r\n    this.props.onOrderBurger(order, this.props.token);\r\n  };\r\n\r\n  checkValidity(value, rules) {\r\n    let isValid = true;\r\n    if (rules.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n\r\n    if (rules.minLength) {\r\n      isValid = value.length >= rules.minLength && isValid;\r\n    }\r\n\r\n    if (rules.maxLength) {\r\n      isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n    return isValid;\r\n  }\r\n\r\n  inputChangedHandler = (event, inputIdentifier) => {\r\n    const updatedOrderForm = {\r\n      ...this.state.orderForm\r\n    };\r\n    const updatedFormElement = {\r\n      ...updatedOrderForm[inputIdentifier]\r\n    };\r\n    updatedFormElement.value = event.target.value;\r\n    updatedFormElement.valid = this.checkValidity(\r\n      updatedFormElement.value,\r\n      updatedFormElement.validation\r\n    );\r\n    updatedFormElement.touched = true;\r\n    updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n\r\n    let formIsValid = true;\r\n    for (let inputIdentifier in updatedOrderForm) {\r\n      formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n    }\r\n    this.setState({ orderForm: updatedOrderForm, formIsValid: formIsValid });\r\n  };\r\n\r\n  render() {\r\n    const formElementsArray = [];\r\n    for (let key in this.state.orderForm) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.orderForm[key]\r\n      });\r\n    }\r\n\r\n    let form = (\r\n      <form onSubmit={this.orderHandler}>\r\n        {formElementsArray.map(formElement => (\r\n          <Input\r\n            key={formElement.id}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={event => this.inputChangedHandler(event, formElement.id)}\r\n          />\r\n        ))}\r\n        <Button btnType=\"Success\" disabled={!this.state.formIsValid}>\r\n          ORDER\r\n        </Button>\r\n      </form>\r\n    );\r\n    if (this.props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n    return (\r\n      <div className={classes.ContactData}>\r\n        <h4> Enter your contact data</h4>\r\n        {form}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    price: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onOrderBurger: (orderData, token) =>\r\n      dispatch(actions.purchaseBurger(orderData, token))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(ContactData, axios));\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport CheckoutSummary from \"../../components/Order/CheckoutSummary/CheckoutSummary\";\r\nimport ContactData from \"./ContactData/ContactData\";\r\n\r\nclass Checkout extends Component {\r\n  checkoutCancelledHandler = () => {\r\n    this.props.history.goBack();\r\n  };\r\n\r\n  CheckoutContinuedHandler = () => {\r\n    this.props.history.replace(\"/checkout/contact-data\");\r\n  };\r\n\r\n  render() {\r\n    let summary = <Redirect to=\"/\" />;\r\n\r\n    if (this.props.ings) {\r\n      const purchasedRedirect = this.props.purchased ? (\r\n        <Redirect to=\"/\" />\r\n      ) : null;\r\n      summary = (\r\n        <div>\r\n          {purchasedRedirect}\r\n          <CheckoutSummary\r\n            ingredients={this.props.ings}\r\n            CheckoutCancelled={this.checkoutCancelledHandler}\r\n            CheckoutContinued={this.CheckoutContinuedHandler}\r\n          />\r\n\r\n          <Route\r\n            path={this.props.match.path + \"/contact-data\"}\r\n            component={ContactData}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return summary;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    purchased: state.order.purchased\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);\r\n"],"sourceRoot":""}